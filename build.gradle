buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.adarshr:gradle-test-logger-plugin:3.2.0'
        classpath 'com.android.tools.build:gradle:8.0.1'
        classpath 'com.apollographql.apollo3:apollo-gradle-plugin:3.7.5'
        classpath 'de.mannodermaus.gradle.plugins:android-junit5:1.8.2.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.10'
        classpath 'org.jetbrains.kotlinx:kover:0.6.1'
        classpath 'org.jlleitschuh.gradle:ktlint-gradle:11.3.1'
        classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:1.2.0'
    }
}

plugins {
    alias libs.plugins.kover apply true
    alias libs.plugins.android.application apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.ben.manes.versions apply true
    alias libs.plugins.version.catalog.update apply true
    alias libs.plugins.google.ksp apply false
}

allprojects {
    tasks.withType(Test) {
        testLogging {
            exceptionFormat 'full'
            events 'started', 'skipped', 'passed', 'failed'
            showStandardStreams true
            outputs.upToDateWhen { false }
        }
    }
}

subprojects {
    apply from: "$rootDir/buildSystem/gradle/ktlint.gradle"
    apply from: "$rootDir/buildSystem/gradle/dependency-updates.gradle"
}

task clean(type: Delete) {
    delete buildDir
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'buildSystem/githooks/prepare-commit-msg')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0755
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook

// Multi-module reports for instrumented tests
// https://developer.android.com/studio/test/command-line#multi-module-reports-instrumented-tests
apply plugin: 'android-reporting'

// Kover
apply from: "$rootDir/buildSystem/gradle/kover-merge.gradle"
