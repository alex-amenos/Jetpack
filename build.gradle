buildscript {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath libs.gradle.test.logger.plugin
        classpath libs.android.gradle.plugin
        classpath libs.apollo.gradle.plugin
        classpath libs.android.junit5.plugin
        classpath libs.kotlin.gradle.plugin
        classpath libs.kover
        classpath libs.ktlint.gradle
        classpath libs.paparazzi.gradle.plugin
    }
}

plugins {
    alias libs.plugins.kover apply true
    alias libs.plugins.android.application apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.serialization apply false
    alias libs.plugins.ben.manes.versions apply true
    alias libs.plugins.version.catalog.update apply true
    alias libs.plugins.google.ksp apply false
}

allprojects {
    tasks.withType(Test) {
        testLogging {
            exceptionFormat 'full'
            events 'started', 'skipped', 'passed', 'failed'
            showStandardStreams true
            outputs.upToDateWhen { false }
        }
    }
}

subprojects {
    apply from: "$rootDir/buildSystem/gradle/ktlint.gradle"
    apply from: "$rootDir/buildSystem/gradle/dependency-updates.gradle"
}

tasks.register('clean', Delete) {
    delete rootProject.layout.buildDirectory
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'buildSystem/githooks/prepare-commit-msg')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0755
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook

// Multi-module reports for instrumented tests
// https://developer.android.com/studio/test/command-line#multi-module-reports-instrumented-tests
apply plugin: 'android-reporting'

// Kover
apply from: "$rootDir/buildSystem/gradle/kover-merge.gradle"
