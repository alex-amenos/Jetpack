buildscript {
    repositories {
        google()
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenCentral()
        gradlePluginPortal()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${Version.KOTLIN}"
        classpath 'org.jetbrains.kotlinx:kover:0.6.0'
        classpath 'org.jlleitschuh.gradle:ktlint-gradle:11.0.0'
        classpath 'com.android.tools.build:gradle:7.3.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.42.0'
        classpath 'com.adarshr:gradle-test-logger-plugin:3.1.0'
        classpath 'de.mannodermaus.gradle.plugins:android-junit5:1.8.2.0'
        classpath "com.apollographql.apollo3:apollo-gradle-plugin:${Version.APOLLO}"
    }
}

allprojects {
    repositories {
        google()
        maven { url 'https://maven.google.com' }
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(Test) {
        testLogging {
            exceptionFormat 'full'
            events 'started', 'skipped', 'passed', 'failed'
            showStandardStreams true
            outputs.upToDateWhen { false }
        }
    }
}

subprojects {
    apply from: "$rootDir/buildSystem/gradle/ktlint.gradle"
    apply from: "$rootDir/buildSystem/gradle/dependency-updates.gradle"
}

task clean(type: Delete) {
    delete buildDir
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'buildSystem/githooks/prepare-commit-msg')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0755
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook

apply plugin: 'android-reporting'
